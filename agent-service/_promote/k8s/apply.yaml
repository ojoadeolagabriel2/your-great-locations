---
apiVersion: v1
kind: Namespace
metadata:
  namespace: location-ns
  name: location-ns
---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS0xLmRvY2tlci5pbyI6eyJ1c2VybmFtZSI6Im9qb2FkZW9sYWdhYnJpZWwiLCJwYXNzd29yZCI6IlNhdHVybjQzMiQiLCJlbWFpbCI6Im9qb2FkZW9sYWdhYnJpZWxAZ21haWwuY29tIiwiYXV0aCI6ImIycHZZV1JsYjJ4aFoyRmljbWxsYkRwVFlYUjFjbTQwTXpJayJ9fX0=
kind: Secret
metadata:
  name: regcred
  namespace: location-ns
type: kubernetes.io/dockerconfigjson
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: agent-service-config-map
  namespace: location-ns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-service
  namespace: location-ns
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: agent-service
  template:
    metadata:
      labels:
        app: agent-service
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: agent-service
          image: registry-1.docker.io/ojoadeolagabriel/agent-service:latest
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 12345
            timeoutSeconds: 3
            initialDelaySeconds: 60
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 12345
            timeoutSeconds: 3
            initialDelaySeconds: 70
            periodSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          ports:
            - containerPort: 12345
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: agent-service-config-map
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: agent-service
  name: agent-service
  namespace: location-ns
spec:
  type: LoadBalancer
  ports:
    - port: 12345
      protocol: TCP
      targetPort: 12345
  selector:
    app.kubernetes.io/instance: agent-service
    app.kubernetes.io/name: agent-service
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: location-ingress
  namespace: location-ns
spec:
  rules:
    - http:
        paths:
          - path: /agency
            pathType: Prefix
            backend:
              service:
                name: agent-service
                port:
                  number: 12345
  ingressClassName: nginx